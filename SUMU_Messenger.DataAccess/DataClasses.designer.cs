#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SUMU_Messenger.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Spark_db")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DataClassesDataContext() : 
				base(global::SUMU_Messenger.DataAccess.Properties.Settings.Default.Spark_dbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DoRegistration")]
		public ISingleResult<DoRegistrationResult> DoRegistration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarBinary(MAX)")] System.Data.Linq.Binary password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordSalt", DbType="VarBinary(MAX)")] System.Data.Linq.Binary passwordSalt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="NVarChar(2)")] string countryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Xml")] System.Xml.Linq.XElement identitiesXML, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> preUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="NVarChar(255)")] ref string error, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] ref string redirect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, passwordSalt, countryId, identitiesXML, preUserId, error, redirect);
			preUserId = ((System.Nullable<long>)(result.GetParameterValue(5)));
			error = ((string)(result.GetParameterValue(6)));
			redirect = ((string)(result.GetParameterValue(7)));
			return ((ISingleResult<DoRegistrationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertLog")]
		public int InsertLog([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string message, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string level, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string request)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, message, category, level, request);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPendingChat")]
		public ISingleResult<GetPendingChatResult> GetPendingChat([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<GetPendingChatResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DoValidation")]
		public ISingleResult<DoValidationResult> DoValidation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(128)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(128)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] ref string user_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] ref string error, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] ref string redirect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, code, userId, user_id, error, redirect);
			userId = ((System.Nullable<long>)(result.GetParameterValue(2)));
			user_id = ((string)(result.GetParameterValue(3)));
			error = ((string)(result.GetParameterValue(4)));
			redirect = ((string)(result.GetParameterValue(5)));
			return ((ISingleResult<DoValidationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DoValidationRequest")]
		public ISingleResult<DoValidationRequestResult> DoValidationRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdentityType", DbType="Int")] System.Nullable<int> identityType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> preUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identity", DbType="NVarChar(100)")] string identity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] ref string error, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] ref string redirect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), identityType, preUserId, identity, error, redirect);
			error = ((string)(result.GetParameterValue(3)));
			redirect = ((string)(result.GetParameterValue(4)));
			return ((ISingleResult<DoValidationRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.preAuthorizationTokenGeneration")]
		public int preAuthorizationTokenGeneration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="NVarChar(128)")] ref string id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] ref System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarBinary(MAX)")] ref System.Data.Linq.Binary password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Salt", DbType="VarBinary(MAX)")] ref System.Data.Linq.Binary salt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, id, userId, password, salt);
			id = ((string)(result.GetParameterValue(1)));
			userId = ((System.Nullable<long>)(result.GetParameterValue(2)));
			password = ((System.Data.Linq.Binary)(result.GetParameterValue(3)));
			salt = ((System.Data.Linq.Binary)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserById")]
		public ISingleResult<GetUserByIdResult> GetUserById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="NVarChar(100)")] string id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<GetUserByIdResult>)(result.ReturnValue));
		}
	}
	
	public partial class DoRegistrationResult
	{
		
		private System.Nullable<int> _TypeId;
		
		private string _Identity;
		
		private string _Token;
		
		private string _Validation;
		
		private System.Nullable<bool> _Immediate;
		
		private string _Template;
		
		public DoRegistrationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100)")]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this._Identity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(128)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validation", DbType="NVarChar(1024)")]
		public string Validation
		{
			get
			{
				return this._Validation;
			}
			set
			{
				if ((this._Validation != value))
				{
					this._Validation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Immediate", DbType="Bit")]
		public System.Nullable<bool> Immediate
		{
			get
			{
				return this._Immediate;
			}
			set
			{
				if ((this._Immediate != value))
				{
					this._Immediate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
	}
	
	public partial class GetPendingChatResult
	{
		
		private string _Group;
		
		private string _Sender;
		
		private string _Id;
		
		private int _Type;
		
		private string _Content;
		
		private System.Nullable<long> _SizeInBytes;
		
		private System.DateTimeOffset _IssuedAt;
		
		private string _ExpiresAt;
		
		private System.Nullable<int> _Duration;
		
		private bool _IsScrambled;
		
		public GetPendingChatResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(128)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this._Group = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this._Sender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(2048)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeInBytes", DbType="BigInt")]
		public System.Nullable<long> SizeInBytes
		{
			get
			{
				return this._SizeInBytes;
			}
			set
			{
				if ((this._SizeInBytes != value))
				{
					this._SizeInBytes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset IssuedAt
		{
			get
			{
				return this._IssuedAt;
			}
			set
			{
				if ((this._IssuedAt != value))
				{
					this._IssuedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresAt", DbType="NVarChar(50)")]
		public string ExpiresAt
		{
			get
			{
				return this._ExpiresAt;
			}
			set
			{
				if ((this._ExpiresAt != value))
				{
					this._ExpiresAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScrambled", DbType="Bit NOT NULL")]
		public bool IsScrambled
		{
			get
			{
				return this._IsScrambled;
			}
			set
			{
				if ((this._IsScrambled != value))
				{
					this._IsScrambled = value;
				}
			}
		}
	}
	
	public partial class DoValidationResult
	{
		
		private string _Id;
		
		private System.Nullable<int> _TypeId;
		
		private string _Recipients;
		
		public DoValidationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128)")]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipients", DbType="NVarChar(MAX)")]
		public string Recipients
		{
			get
			{
				return this._Recipients;
			}
			set
			{
				if ((this._Recipients != value))
				{
					this._Recipients = value;
				}
			}
		}
	}
	
	public partial class DoValidationRequestResult
	{
		
		private System.Nullable<int> _TypeId;
		
		private string _Identity;
		
		private string _Token;
		
		private string _Validation;
		
		private System.Nullable<bool> _Immediate;
		
		private string _Template;
		
		public DoValidationRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100)")]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this._Identity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(128)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validation", DbType="NVarChar(1024)")]
		public string Validation
		{
			get
			{
				return this._Validation;
			}
			set
			{
				if ((this._Validation != value))
				{
					this._Validation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Immediate", DbType="Bit")]
		public System.Nullable<bool> Immediate
		{
			get
			{
				return this._Immediate;
			}
			set
			{
				if ((this._Immediate != value))
				{
					this._Immediate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
	}
	
	public partial class GetUserByIdResult
	{
		
		private string _Id;
		
		private string _Name;
		
		private string _Username;
		
		private string _CountryId;
		
		private System.Nullable<System.DateTimeOffset> _CreatedAt;
		
		private int _IdentityTypeId;
		
		private string _Identity;
		
		public GetUserByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityTypeId", DbType="Int NOT NULL")]
		public int IdentityTypeId
		{
			get
			{
				return this._IdentityTypeId;
			}
			set
			{
				if ((this._IdentityTypeId != value))
				{
					this._IdentityTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this._Identity = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
