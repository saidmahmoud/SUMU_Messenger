#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SUMU_Messenger.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sumu_messengerdb")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserIdentity(UserIdentity instance);
    partial void UpdateUserIdentity(UserIdentity instance);
    partial void DeleteUserIdentity(UserIdentity instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::SUMU_Messenger.DataAccess.Properties.Settings.Default.sumu_messengerdbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserIdentity> UserIdentities
		{
			get
			{
				return this.GetTable<UserIdentity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DoRegistration")]
		public ISingleResult<DoRegistrationResult> DoRegistration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarBinary(MAX)")] System.Data.Linq.Binary password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PasswordSalt", DbType="VarBinary(MAX)")] System.Data.Linq.Binary passwordSalt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CountryId", DbType="NVarChar(2)")] string countryId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Xml")] System.Xml.Linq.XElement identitiesXML, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> preUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="NVarChar(255)")] ref string error, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] ref string redirect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, passwordSalt, countryId, identitiesXML, preUserId, error, redirect);
			preUserId = ((System.Nullable<long>)(result.GetParameterValue(5)));
			error = ((string)(result.GetParameterValue(6)));
			redirect = ((string)(result.GetParameterValue(7)));
			return ((ISingleResult<DoRegistrationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertLog")]
		public int InsertLog([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string message, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string level, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string request)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, message, category, level, request);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPendingChat")]
		public ISingleResult<GetPendingChatResult> GetPendingChat([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<GetPendingChatResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DoValidation")]
		public ISingleResult<DoValidationResult> DoValidation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Token", DbType="NVarChar(128)")] string token, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="NVarChar(128)")] string code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] ref string user_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] ref string error, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] ref string redirect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), token, code, userId, user_id, error, redirect);
			userId = ((System.Nullable<long>)(result.GetParameterValue(2)));
			user_id = ((string)(result.GetParameterValue(3)));
			error = ((string)(result.GetParameterValue(4)));
			redirect = ((string)(result.GetParameterValue(5)));
			return ((ISingleResult<DoValidationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DoValidationRequest")]
		public ISingleResult<DoValidationRequestResult> DoValidationRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IdentityType", DbType="Int")] System.Nullable<int> identityType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> preUserId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Identity", DbType="NVarChar(100)")] string identity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] ref string error, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] ref string redirect)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), identityType, preUserId, identity, error, redirect);
			error = ((string)(result.GetParameterValue(3)));
			redirect = ((string)(result.GetParameterValue(4)));
			return ((ISingleResult<DoValidationRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.preAuthorizationTokenGeneration")]
		public int preAuthorizationTokenGeneration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="NVarChar(128)")] ref string id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="BigInt")] ref System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarBinary(MAX)")] ref System.Data.Linq.Binary password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Salt", DbType="VarBinary(MAX)")] ref System.Data.Linq.Binary salt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, id, userId, password, salt);
			id = ((string)(result.GetParameterValue(1)));
			userId = ((System.Nullable<long>)(result.GetParameterValue(2)));
			password = ((System.Data.Linq.Binary)(result.GetParameterValue(3)));
			salt = ((System.Data.Linq.Binary)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserById")]
		public ISingleResult<GetUserByIdResult> GetUserById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="NVarChar(100)")] string id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<GetUserByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUsers")]
		public ISingleResult<GetUsersResult> GetUsers([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> offset, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> limit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), offset, limit);
			return ((ISingleResult<GetUsersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveNotification")]
		public int SaveNotification([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SenderId", DbType="BigInt")] System.Nullable<long> senderId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string recipientPublicId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecipientInternalId", DbType="BigInt")] ref System.Nullable<long> recipientInternalId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocalMessageId", DbType="NVarChar(100)")] string localMessageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationTypeId", DbType="Int")] System.Nullable<int> notificationTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationContent", DbType="NVarChar(2048)")] string notificationContent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpiresAt", DbType="NVarChar(50)")] string expiresAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileSizeInBytes", DbType="BigInt")] System.Nullable<long> fileSizeInBytes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Duration", DbType="Int")] System.Nullable<int> duration, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsScrambled", DbType="Bit")] System.Nullable<bool> isScrambled, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> delay, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlreadyReceived", DbType="Bit")] ref System.Nullable<bool> alreadyReceived, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationId", DbType="NVarChar(128)")] ref string notificationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssuedAt", DbType="DateTimeOffset")] ref System.Nullable<System.DateTimeOffset> issuedAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SenderHasPendingNotifications", DbType="Bit")] ref System.Nullable<bool> senderHasPendingNotifications)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), senderId, recipientPublicId, recipientInternalId, localMessageId, notificationTypeId, notificationContent, expiresAt, fileSizeInBytes, duration, isScrambled, delay, alreadyReceived, notificationId, issuedAt, senderHasPendingNotifications);
			recipientInternalId = ((System.Nullable<long>)(result.GetParameterValue(2)));
			alreadyReceived = ((System.Nullable<bool>)(result.GetParameterValue(11)));
			notificationId = ((string)(result.GetParameterValue(12)));
			issuedAt = ((System.Nullable<System.DateTimeOffset>)(result.GetParameterValue(13)));
			senderHasPendingNotifications = ((System.Nullable<bool>)(result.GetParameterValue(14)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NotificationDelivered")]
		public ISingleResult<NotificationDeliveredResult> NotificationDelivered([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string notifications)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, notifications);
			return ((ISingleResult<NotificationDeliveredResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NotificationRead")]
		public ISingleResult<NotificationReadResult> NotificationRead([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="NVarChar(128)")] string id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> markAllPrevious)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, id, markAllPrevious);
			return ((ISingleResult<NotificationReadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NotificationRecalled")]
		public ISingleResult<NotificationRecalledResult> NotificationRecalled([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ids", DbType="NVarChar(MAX)")] string ids)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, ids);
			return ((ISingleResult<NotificationRecalledResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GenericNotification")]
		public ISingleResult<GenericNotificationResult> GenericNotification([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> delay, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SenderId", DbType="BigInt")] System.Nullable<long> senderId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string recipient_users, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string recipient_groups, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocalMessageId", DbType="NVarChar(100)")] string localMessageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationTypeId", DbType="Int")] System.Nullable<int> notificationTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NotificationContent", DbType="NVarChar(2048)")] string notificationContent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpiresAt", DbType="NVarChar(50)")] string expiresAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FileSizeInBytes", DbType="BigInt")] System.Nullable<long> fileSizeInBytes, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Duration", DbType="Int")] System.Nullable<int> duration, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsScrambled", DbType="Bit")] System.Nullable<bool> isScrambled, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IssuedAt", DbType="DateTimeOffset")] ref System.Nullable<System.DateTimeOffset> issuedAt, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlreadyReceived", DbType="Bit")] ref System.Nullable<bool> alreadyReceived, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SenderHasPendingNotifications", DbType="Bit")] ref System.Nullable<bool> senderHasPendingNotifications)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), delay, senderId, recipient_users, recipient_groups, localMessageId, notificationTypeId, notificationContent, expiresAt, fileSizeInBytes, duration, isScrambled, issuedAt, alreadyReceived, senderHasPendingNotifications);
			issuedAt = ((System.Nullable<System.DateTimeOffset>)(result.GetParameterValue(11)));
			alreadyReceived = ((System.Nullable<bool>)(result.GetParameterValue(12)));
			senderHasPendingNotifications = ((System.Nullable<bool>)(result.GetParameterValue(13)));
			return ((ISingleResult<GenericNotificationResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<bool> _BanSMSInvitation;
		
		private string _PhoneRegExp;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBanSMSInvitationChanging(System.Nullable<bool> value);
    partial void OnBanSMSInvitationChanged();
    partial void OnPhoneRegExpChanging(string value);
    partial void OnPhoneRegExpChanged();
    #endregion
		
		public Country()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanSMSInvitation", DbType="Bit")]
		public System.Nullable<bool> BanSMSInvitation
		{
			get
			{
				return this._BanSMSInvitation;
			}
			set
			{
				if ((this._BanSMSInvitation != value))
				{
					this.OnBanSMSInvitationChanging(value);
					this.SendPropertyChanging();
					this._BanSMSInvitation = value;
					this.SendPropertyChanged("BanSMSInvitation");
					this.OnBanSMSInvitationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneRegExp", DbType="NVarChar(300)")]
		public string PhoneRegExp
		{
			get
			{
				return this._PhoneRegExp;
			}
			set
			{
				if ((this._PhoneRegExp != value))
				{
					this.OnPhoneRegExpChanging(value);
					this.SendPropertyChanging();
					this._PhoneRegExp = value;
					this.SendPropertyChanged("PhoneRegExp");
					this.OnPhoneRegExpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_User", Storage="_Users", ThisKey="Id", OtherKey="CountryId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private long _UserId;
		
		private string _Username;
		
		private string _Name;
		
		private string _CountryId;
		
		private System.Data.Linq.Binary _Version;
		
		private System.Nullable<System.DateTimeOffset> _CreatedAt;
		
		private System.Nullable<System.DateTimeOffset> _UpdatedAt;
		
		private bool _Deleted;
		
		private EntitySet<UserIdentity> _UserIdentities;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryIdChanging(string value);
    partial void OnCountryIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnUpdatedAtChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public User()
		{
			this._UserIdentities = new EntitySet<UserIdentity>(new Action<UserIdentity>(this.attach_UserIdentities), new Action<UserIdentity>(this.detach_UserIdentities));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="NChar(2) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTimeOffset", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTimeOffset> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTimeOffset", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTimeOffset> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserIdentity", Storage="_UserIdentities", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserIdentity> UserIdentities
		{
			get
			{
				return this._UserIdentities;
			}
			set
			{
				this._UserIdentities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_User", Storage="_Country", ThisKey="CountryId", OtherKey="Id", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._CountryId = value.Id;
					}
					else
					{
						this._CountryId = default(string);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserIdentities(UserIdentity entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserIdentities(UserIdentity entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserIdentities")]
	public partial class UserIdentity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserId;
		
		private int _IdentityTypeId;
		
		private string _Identity;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnIdentityTypeIdChanging(int value);
    partial void OnIdentityTypeIdChanged();
    partial void OnIdentityChanging(string value);
    partial void OnIdentityChanged();
    #endregion
		
		public UserIdentity()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdentityTypeId
		{
			get
			{
				return this._IdentityTypeId;
			}
			set
			{
				if ((this._IdentityTypeId != value))
				{
					this.OnIdentityTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityTypeId = value;
					this.SendPropertyChanged("IdentityTypeId");
					this.OnIdentityTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this.OnIdentityChanging(value);
					this.SendPropertyChanging();
					this._Identity = value;
					this.SendPropertyChanged("Identity");
					this.OnIdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserIdentity", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserIdentities.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserIdentities.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class DoRegistrationResult
	{
		
		private System.Nullable<int> _TypeId;
		
		private string _Identity;
		
		private string _Token;
		
		private string _Validation;
		
		private System.Nullable<bool> _Immediate;
		
		private string _Template;
		
		public DoRegistrationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100)")]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this._Identity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(128)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validation", DbType="NVarChar(1024)")]
		public string Validation
		{
			get
			{
				return this._Validation;
			}
			set
			{
				if ((this._Validation != value))
				{
					this._Validation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Immediate", DbType="Bit")]
		public System.Nullable<bool> Immediate
		{
			get
			{
				return this._Immediate;
			}
			set
			{
				if ((this._Immediate != value))
				{
					this._Immediate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
	}
	
	public partial class GetPendingChatResult
	{
		
		private string _Group;
		
		private string _Sender;
		
		private string _Id;
		
		private int _Type;
		
		private string _Content;
		
		private System.Nullable<long> _SizeInBytes;
		
		private System.DateTimeOffset _IssuedAt;
		
		private string _ExpiresAt;
		
		private System.Nullable<int> _Duration;
		
		private bool _IsScrambled;
		
		public GetPendingChatResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(128)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this._Group = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this._Sender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(2048)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeInBytes", DbType="BigInt")]
		public System.Nullable<long> SizeInBytes
		{
			get
			{
				return this._SizeInBytes;
			}
			set
			{
				if ((this._SizeInBytes != value))
				{
					this._SizeInBytes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuedAt", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset IssuedAt
		{
			get
			{
				return this._IssuedAt;
			}
			set
			{
				if ((this._IssuedAt != value))
				{
					this._IssuedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresAt", DbType="NVarChar(50)")]
		public string ExpiresAt
		{
			get
			{
				return this._ExpiresAt;
			}
			set
			{
				if ((this._ExpiresAt != value))
				{
					this._ExpiresAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScrambled", DbType="Bit NOT NULL")]
		public bool IsScrambled
		{
			get
			{
				return this._IsScrambled;
			}
			set
			{
				if ((this._IsScrambled != value))
				{
					this._IsScrambled = value;
				}
			}
		}
	}
	
	public partial class DoValidationResult
	{
		
		private string _Id;
		
		private System.Nullable<int> _TypeId;
		
		private string _Recipients;
		
		public DoValidationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128)")]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipients", DbType="NVarChar(MAX)")]
		public string Recipients
		{
			get
			{
				return this._Recipients;
			}
			set
			{
				if ((this._Recipients != value))
				{
					this._Recipients = value;
				}
			}
		}
	}
	
	public partial class DoValidationRequestResult
	{
		
		private System.Nullable<int> _TypeId;
		
		private string _Identity;
		
		private string _Token;
		
		private string _Validation;
		
		private System.Nullable<bool> _Immediate;
		
		private string _Template;
		
		public DoValidationRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this._TypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100)")]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this._Identity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(128)")]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this._Token = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validation", DbType="NVarChar(1024)")]
		public string Validation
		{
			get
			{
				return this._Validation;
			}
			set
			{
				if ((this._Validation != value))
				{
					this._Validation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Immediate", DbType="Bit")]
		public System.Nullable<bool> Immediate
		{
			get
			{
				return this._Immediate;
			}
			set
			{
				if ((this._Immediate != value))
				{
					this._Immediate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)")]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this._Template = value;
				}
			}
		}
	}
	
	public partial class GetUserByIdResult
	{
		
		private string _Id;
		
		private string _Name;
		
		private string _Username;
		
		private string _CountryId;
		
		private System.Nullable<System.DateTimeOffset> _CreatedAt;
		
		private int _IdentityTypeId;
		
		private string _Identity;
		
		public GetUserByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityTypeId", DbType="Int NOT NULL")]
		public int IdentityTypeId
		{
			get
			{
				return this._IdentityTypeId;
			}
			set
			{
				if ((this._IdentityTypeId != value))
				{
					this._IdentityTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this._Identity = value;
				}
			}
		}
	}
	
	public partial class GetUsersResult
	{
		
		private string _Id;
		
		private string _Name;
		
		private string _Username;
		
		private string _CountryId;
		
		private System.Nullable<System.DateTimeOffset> _CreatedAt;
		
		private int _IdentityTypeId;
		
		private string _Identity;
		
		public GetUsersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this._CreatedAt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityTypeId", DbType="Int NOT NULL")]
		public int IdentityTypeId
		{
			get
			{
				return this._IdentityTypeId;
			}
			set
			{
				if ((this._IdentityTypeId != value))
				{
					this._IdentityTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this._Identity = value;
				}
			}
		}
	}
	
	public partial class NotificationDeliveredResult
	{
		
		private System.Nullable<long> _UserId;
		
		private string _User_Id;
		
		private string _Content;
		
		private string _UpdateId;
		
		public NotificationDeliveredResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt")]
		public System.Nullable<long> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="NVarChar(128)")]
		public string User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this._User_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="NVarChar(128)")]
		public string UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this._UpdateId = value;
				}
			}
		}
	}
	
	public partial class NotificationReadResult
	{
		
		private long _UserId;
		
		private string _User_Id;
		
		private string _UpdateId;
		
		private string _Content;
		
		public NotificationReadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this._User_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="NVarChar(128)")]
		public string UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this._UpdateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
	}
	
	public partial class NotificationRecalledResult
	{
		
		private long _UserId;
		
		private string _User_Id;
		
		private string _UpdateId;
		
		public NotificationRecalledResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this._User_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="NVarChar(128)")]
		public string UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this._UpdateId = value;
				}
			}
		}
	}
	
	public partial class GenericNotificationResult
	{
		
		private string _Id;
		
		private string _Group_Id;
		
		private string _GroupSubject;
		
		private string _Recipients;
		
		public GenericNotificationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128)")]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_Id", DbType="NVarChar(128)")]
		public string Group_Id
		{
			get
			{
				return this._Group_Id;
			}
			set
			{
				if ((this._Group_Id != value))
				{
					this._Group_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupSubject", DbType="NVarChar(25)")]
		public string GroupSubject
		{
			get
			{
				return this._GroupSubject;
			}
			set
			{
				if ((this._GroupSubject != value))
				{
					this._GroupSubject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipients", DbType="NVarChar(MAX)")]
		public string Recipients
		{
			get
			{
				return this._Recipients;
			}
			set
			{
				if ((this._Recipients != value))
				{
					this._Recipients = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
